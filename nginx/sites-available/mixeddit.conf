### All from http://docs.gunicorn.org/en/stable/deploy.html#
upstream app_server {
    # fail_timeout=0 means we always retry an upstream even if it failed
    # to return a good HTTP response

    # for UNIX domain socket setups
    # server unix:/home/zgilkerson/projects/mixeddit/gunicorn.socket fail_timeout=0;

    # for a TCP configuration
    server web:443 fail_timeout=0;
}

server {
	listen 80 default_server;
	listen [::]:80 default_server;
	server_name _;
	return 301 https://$host$request_uri;
}

server {
    # use 'listen 80 deferred;' for Linux
    # use 'listen 80 accept_filter=httpready;' for FreeBSD
    listen 443 ssl;
    client_max_body_size 20M;

    # set the correct host(s) for your site
    server_name localhost;

    keepalive_timeout 5;

    ssl on;
    ssl_certificate /etc/nginx/certs/development.crt;
    ssl_certificate_key /etc/nginx/certs/development.key;

    ssl_session_timeout 5m;

    ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers "HIGH:!aNULL:!MD5 or HIGH:!aNULL:!MD5:!3DES";
    ssl_prefer_server_ciphers on;

    # path for static files
    root /var/www/html/;

    location = / {
        # checks for static file, if not found proxy to app
        add_header 'Access-Control-Allow-Origin' *;
        try_files /index.html =404;
    }

    location / {
        # checks for static file, if not found proxy to app
        add_header 'Access-Control-Allow-Origin' *;
        try_files $uri /index.html =404;
    }

    location ^~ /api {
        add_header 'Access-Control-Allow-Origin' *;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # enable this if and only if you use HTTPS
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header Host $http_host;
        # we don't want nginx trying to do something clever with
        # redirects, we set the Host: header above already.
        proxy_redirect off;
        proxy_pass https://app_server;
        proxy_ssl_certificate /etc/nginx/certs/development.crt;
        proxy_ssl_certificate_key /etc/nginx/certs/development.key;
        proxy_ssl_session_reuse on;
    }

    error_page 500 502 503 504 /500.html;
    location = /500.html {
        root /var/www/html;
    }
}
### End gunicorn docs